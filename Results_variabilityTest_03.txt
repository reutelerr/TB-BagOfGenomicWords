"C:\Cours\TB-Bag of genomic words\TB-BagOfGenomicWords\venv\Scripts\python.exe" -Wignore "C:/Cours/TB-Bag of genomic words/TB-BagOfGenomicWords/src/main.py" testVariability
Console output is saving to: C:\Cours\TB-Bag of genomic words\TB-BagOfGenomicWords\console_output.txt
Injecting Sequence, variability : 0.0
Building dictionary
Total number of lines in file : 1411
Counting K-mers of length : 10
100%|█████████▉| 1410/1411 [00:08<00:00, 165.24it/s]
Counting K-mers of length : 9
100%|█████████▉| 1410/1411 [00:05<00:00, 268.93it/s]
Counting K-mers of length : 8
100%|█████████▉| 1410/1411 [00:04<00:00, 341.24it/s]
Counting K-mers of length : 7
100%|█████████▉| 1410/1411 [00:03<00:00, 370.86it/s]
  0%|          | 0/1411 [00:00<?, ?it/s]Counting K-mers of length : 6
100%|█████████▉| 1410/1411 [00:03<00:00, 395.62it/s]
Counting K-mers of length : 5
100%|█████████▉| 1410/1411 [00:03<00:00, 388.32it/s]
Counting K-mers of length : 4
100%|█████████▉| 1410/1411 [00:03<00:00, 403.20it/s]
Counting K-mers of length : 3
100%|█████████▉| 1410/1411 [00:03<00:00, 451.20it/s]
--- 35.74900031089783 seconds ---
Filtering dictionary
100%|██████████| 1033631/1033631 [00:00<00:00, 3377884.41it/s]
100%|██████████| 262115/262115 [00:00<00:00, 3494875.55it/s]
100%|██████████| 65560/65560 [00:00<00:00, 3642244.99it/s]
100%|██████████| 16405/16405 [00:00<00:00, 3281237.82it/s]
100%|██████████| 4114/4114 [00:00<00:00, 2056903.88it/s]
100%|██████████| 1039/1039 [00:00<00:00, 1039075.31it/s]
100%|██████████| 268/268 [00:00<?, ?it/s]
100%|██████████| 73/73 [00:00<?, ?it/s]
--- 0.8510019779205322 seconds ---
Splitting training and testing data
Making BOWs (training)
Total number of lines in file : 1256
100%|█████████▉| 1255/1256 [00:29<00:00, 43.17it/s]
--- 29.146507263183594 seconds ---
Making BOWs (testing)
Total number of lines in file : 156
 99%|█████████▉| 155/156 [00:03<00:00, 43.16it/s]
--- 3.622000217437744 seconds ---
Building model
Reading training data
Sequences loaded : [1255]

Model type : Perceptron
{'gridSearchParams': {'hidden_layer_sizes': [10], 'solver': ['sgd'], 'activation': ['logistic'], 'alpha': array([0.01]), 'learning_rate': ['adaptive'], 'learning_rate_init': [0.01, 0.001, 0.0001]}, 'scoring': 'accuracy', 'cvFolds': 5}
random_state : 64

Training model (scaled)
Fitting 5 folds for each of 3 candidates, totalling 15 fits
trainModel executed in --- 388.44200015068054 seconds ---
Scores : {'mean_fit_time': array([11.9593998 , 27.53240018, 35.42820024]), 'std_fit_time': array([0.55402995, 0.89096775, 0.10156874]), 'mean_score_time': array([0.0050014 , 0.00520177, 0.00520263]), 'std_score_time': array([0.00063196, 0.00039973, 0.00098048]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[10, 10, 10],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.01, 0.001, 0.0001],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['sgd', 'sgd', 'sgd'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}], 'split0_test_score': array([1.        , 1.        , 0.99601594]), 'split1_test_score': array([1.        , 0.98804781, 0.98804781]), 'split2_test_score': array([1., 1., 1.]), 'split3_test_score': array([1., 1., 1.]), 'split4_test_score': array([1., 1., 1.]), 'mean_test_score': array([1.        , 0.99760956, 0.99681275]), 'std_test_score': array([0.        , 0.00478088, 0.00464618]), 'rank_test_score': array([1, 2, 3])}
Best params : {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}
Best mean cross-validation score : 1.0

Reading testing data
Sequences loaded : [155]

Testing model
Testing data score : 0.9806451612903225

-------------------------------

Injecting Sequence, variability : 0.05
Splitting training and testing data
Making BOWs (training)
Total number of lines in file : 1254
100%|█████████▉| 1253/1254 [00:29<00:00, 42.69it/s]
--- 29.437000274658203 seconds ---
Making BOWs (testing)
Total number of lines in file : 158
 99%|█████████▉| 157/158 [00:03<00:00, 44.29it/s]
--- 3.5819997787475586 seconds ---
Building model
Reading training data
Sequences loaded : [1253]

Model type : Perceptron
{'gridSearchParams': {'hidden_layer_sizes': [10], 'solver': ['sgd'], 'activation': ['logistic'], 'alpha': array([0.01]), 'learning_rate': ['adaptive'], 'learning_rate_init': [0.01, 0.001, 0.0001]}, 'scoring': 'accuracy', 'cvFolds': 5}
random_state : 99

Training model (scaled)
Fitting 5 folds for each of 3 candidates, totalling 15 fits
trainModel executed in --- 409.78411865234375 seconds ---
Scores : {'mean_fit_time': array([14.35162411, 23.82460008, 35.09179978]), 'std_fit_time': array([5.48874838, 9.21682874, 0.09942654]), 'mean_score_time': array([0.00500131, 0.00520134, 0.00480218]), 'std_score_time': array([8.92080638e-07, 4.00424554e-04, 3.99806429e-04]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[10, 10, 10],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.01, 0.001, 0.0001],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['sgd', 'sgd', 'sgd'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}], 'split0_test_score': array([0.9561753 , 0.92430279, 0.92430279]), 'split1_test_score': array([0.82071713, 0.81673307, 0.9123506 ]), 'split2_test_score': array([0.93625498, 0.93625498, 0.94023904]), 'split3_test_score': array([0.952, 0.952, 0.932]), 'split4_test_score': array([0.948, 0.92 , 0.944]), 'mean_test_score': array([0.92262948, 0.90985817, 0.93057849]), 'std_test_score': array([0.05138753, 0.04786755, 0.01137651]), 'rank_test_score': array([2, 3, 1])}
Best params : {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}
Best mean cross-validation score : 0.9305784860557769

Reading testing data
Sequences loaded : [157]

Testing model
Testing data score : 0.9490445859872612

-------------------------------

Injecting Sequence, variability : 0.1
Splitting training and testing data
Making BOWs (training)
Total number of lines in file : 1243
100%|█████████▉| 1242/1243 [00:27<00:00, 44.85it/s]
--- 27.776000022888184 seconds ---
Making BOWs (testing)
Total number of lines in file : 169
 99%|█████████▉| 168/169 [00:04<00:00, 37.74it/s]
--- 4.478999853134155 seconds ---
Building model
Reading training data
Sequences loaded : [1242]

Model type : Perceptron
{'gridSearchParams': {'hidden_layer_sizes': [10], 'solver': ['sgd'], 'activation': ['logistic'], 'alpha': array([0.01]), 'learning_rate': ['adaptive'], 'learning_rate_init': [0.01, 0.001, 0.0001]}, 'scoring': 'accuracy', 'cvFolds': 5}
random_state : 57

Training model (scaled)
Fitting 5 folds for each of 3 candidates, totalling 15 fits
trainModel executed in --- 465.3952679634094 seconds ---
Scores : {'mean_fit_time': array([21.95959945, 33.21820202, 33.19825339]), 'std_fit_time': array([3.20104093, 0.09592079, 0.05345367]), 'mean_score_time': array([0.0056015 , 0.00520191, 0.0050005 ]), 'std_score_time': array([0.00048977, 0.00074849, 0.00063301]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[10, 10, 10],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.01, 0.001, 0.0001],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['sgd', 'sgd', 'sgd'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}], 'split0_test_score': array([0.87550201, 0.86746988, 0.87148594]), 'split1_test_score': array([0.81927711, 0.81124498, 0.72690763]), 'split2_test_score': array([0.85483871, 0.875     , 0.85483871]), 'split3_test_score': array([0.89516129, 0.88709677, 0.875     ]), 'split4_test_score': array([0.90322581, 0.89919355, 0.85080645]), 'mean_test_score': array([0.86960098, 0.86800104, 0.83580775]), 'std_test_score': array([0.03022978, 0.03035832, 0.05523647]), 'rank_test_score': array([1, 2, 3])}
Best params : {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}
Best mean cross-validation score : 0.8696009845834952

Reading testing data
Sequences loaded : [168]

Testing model
Testing data score : 0.8333333333333334

-------------------------------

Injecting Sequence, variability : 0.15000000000000002
Splitting training and testing data
Making BOWs (training)
Total number of lines in file : 1261
100%|█████████▉| 1260/1261 [00:29<00:00, 42.92it/s]
--- 29.431999921798706 seconds ---
Making BOWs (testing)
Total number of lines in file : 151
 99%|█████████▉| 150/151 [00:02<00:00, 52.07it/s]
--- 2.9140005111694336 seconds ---
Building model
Reading training data
Sequences loaded : [1260]

Model type : Perceptron
{'gridSearchParams': {'hidden_layer_sizes': [10], 'solver': ['sgd'], 'activation': ['logistic'], 'alpha': array([0.01]), 'learning_rate': ['adaptive'], 'learning_rate_init': [0.01, 0.001, 0.0001]}, 'scoring': 'accuracy', 'cvFolds': 5}
random_state : 96

Training model (scaled)
Fitting 5 folds for each of 3 candidates, totalling 15 fits
trainModel executed in --- 467.4910001754761 seconds ---
Scores : {'mean_fit_time': array([17.21100044, 35.22760048, 35.18619971]), 'std_fit_time': array([4.23076582, 0.06838869, 0.05112872]), 'mean_score_time': array([0.00500202, 0.00520158, 0.00540218]), 'std_score_time': array([1.13843311e-06, 7.47819217e-04, 4.88929384e-04]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[10, 10, 10],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.01, 0.001, 0.0001],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['sgd', 'sgd', 'sgd'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}], 'split0_test_score': array([0.85714286, 0.86111111, 0.85714286]), 'split1_test_score': array([0.79761905, 0.76984127, 0.78571429]), 'split2_test_score': array([0.80952381, 0.80952381, 0.73412698]), 'split3_test_score': array([0.86507937, 0.86904762, 0.83730159]), 'split4_test_score': array([0.85714286, 0.86111111, 0.80952381]), 'mean_test_score': array([0.83730159, 0.83412698, 0.8047619 ]), 'std_test_score': array([0.02794733, 0.03850638, 0.04284244]), 'rank_test_score': array([1, 2, 3])}
Best params : {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}
Best mean cross-validation score : 0.8373015873015873

Reading testing data
Sequences loaded : [150]

Testing model
Testing data score : 0.8133333333333334

-------------------------------

Injecting Sequence, variability : 0.2
Splitting training and testing data
Making BOWs (training)
Total number of lines in file : 1270
100%|█████████▉| 1269/1270 [00:29<00:00, 43.14it/s]
--- 29.50602412223816 seconds ---
Making BOWs (testing)
Total number of lines in file : 142
 99%|█████████▉| 141/142 [00:02<00:00, 52.51it/s]
--- 2.7039990425109863 seconds ---
Building model
Reading training data
Sequences loaded : [1269]

Model type : Perceptron
{'gridSearchParams': {'hidden_layer_sizes': [10], 'solver': ['sgd'], 'activation': ['logistic'], 'alpha': array([0.01]), 'learning_rate': ['adaptive'], 'learning_rate_init': [0.01, 0.001, 0.0001]}, 'scoring': 'accuracy', 'cvFolds': 5}
random_state : 79

Training model (scaled)
Fitting 5 folds for each of 3 candidates, totalling 15 fits
trainModel executed in --- 495.0042338371277 seconds ---
Scores : {'mean_fit_time': array([19.3880465 , 35.45700021, 35.42580051]), 'std_fit_time': array([6.18405853, 0.08095889, 0.09630517]), 'mean_score_time': array([0.00520315, 0.00500178, 0.00500178]), 'std_score_time': array([4.00363751e-04, 8.93670031e-04, 1.35710234e-06]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[10, 10, 10],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.01, 0.001, 0.0001],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['sgd', 'sgd', 'sgd'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}], 'split0_test_score': array([0.74409449, 0.74409449, 0.71653543]), 'split1_test_score': array([0.68503937, 0.71259843, 0.69685039]), 'split2_test_score': array([0.69685039, 0.69291339, 0.68503937]), 'split3_test_score': array([0.7519685 , 0.7480315 , 0.72047244]), 'split4_test_score': array([0.81422925, 0.81422925, 0.75494071]), 'mean_test_score': array([0.7384364 , 0.74237341, 0.71476767]), 'std_test_score': array([0.04591367, 0.04130637, 0.02389286]), 'rank_test_score': array([2, 1, 3])}
Best params : {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}
Best mean cross-validation score : 0.7423734088574896

Reading testing data
Sequences loaded : [141]

Testing model
Testing data score : 0.7872340425531915

-------------------------------

Injecting Sequence, variability : 0.25
Splitting training and testing data
Making BOWs (training)
Total number of lines in file : 1264
100%|█████████▉| 1263/1264 [00:28<00:00, 43.98it/s]
--- 28.802001237869263 seconds ---
Making BOWs (testing)
Total number of lines in file : 148
 99%|█████████▉| 147/148 [00:03<00:00, 42.78it/s]
--- 3.469998598098755 seconds ---
Building model
Reading training data
Sequences loaded : [1263]

Model type : Perceptron
{'gridSearchParams': {'hidden_layer_sizes': [10], 'solver': ['sgd'], 'activation': ['logistic'], 'alpha': array([0.01]), 'learning_rate': ['adaptive'], 'learning_rate_init': [0.01, 0.001, 0.0001]}, 'scoring': 'accuracy', 'cvFolds': 5}
random_state : 48

Training model (scaled)
Fitting 5 folds for each of 3 candidates, totalling 15 fits
trainModel executed in --- 511.5137391090393 seconds ---
Scores : {'mean_fit_time': array([22.8953475 , 35.25620089, 35.2948009 ]), 'std_fit_time': array([7.14484292, 0.06184284, 0.04364128]), 'mean_score_time': array([0.00540166, 0.00540128, 0.00480118]), 'std_score_time': array([0.00049053, 0.00101828, 0.0003999 ]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[10, 10, 10],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.01, 0.001, 0.0001],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['sgd', 'sgd', 'sgd'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}], 'split0_test_score': array([0.71146245, 0.72727273, 0.69960474]), 'split1_test_score': array([0.65217391, 0.67193676, 0.5770751 ]), 'split2_test_score': array([0.67588933, 0.65612648, 0.67588933]), 'split3_test_score': array([0.70634921, 0.73809524, 0.69047619]), 'split4_test_score': array([0.73412698, 0.73015873, 0.69444444]), 'mean_test_score': array([0.69600038, 0.70471799, 0.66749796]), 'std_test_score': array([0.0287229 , 0.03378086, 0.04589481]), 'rank_test_score': array([2, 1, 3])}
Best params : {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}
Best mean cross-validation score : 0.7047179873266829

Reading testing data
Sequences loaded : [147]

Testing model
Testing data score : 0.6802721088435374

-------------------------------

Injecting Sequence, variability : 0.30000000000000004
Splitting training and testing data
Making BOWs (training)
Total number of lines in file : 1271
100%|█████████▉| 1270/1271 [00:31<00:00, 40.26it/s]
--- 31.61848020553589 seconds ---
Making BOWs (testing)
Total number of lines in file : 141
 99%|█████████▉| 140/141 [00:03<00:00, 43.72it/s]
--- 3.2279982566833496 seconds ---
Building model
Reading training data
Sequences loaded : [1270]

Model type : Perceptron
{'gridSearchParams': {'hidden_layer_sizes': [10], 'solver': ['sgd'], 'activation': ['logistic'], 'alpha': array([0.01]), 'learning_rate': ['adaptive'], 'learning_rate_init': [0.01, 0.001, 0.0001]}, 'scoring': 'accuracy', 'cvFolds': 5}
random_state : 97

Training model (scaled)
Fitting 5 folds for each of 3 candidates, totalling 15 fits
trainModel executed in --- 498.2640697956085 seconds ---
Scores : {'mean_fit_time': array([24.53220038, 35.35480065, 31.03920064]), 'std_fit_time': array([1.50898661, 0.12314964, 8.70818547]), 'mean_score_time': array([0.0050015 , 0.00520186, 0.00540094]), 'std_score_time': array([1.36878015e-06, 4.00639630e-04, 4.90233159e-04]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[10, 10, 10],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.01, 0.001, 0.0001],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['sgd', 'sgd', 'sgd'],
             mask=[False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}], 'split0_test_score': array([0.68110236, 0.68110236, 0.68503937]), 'split1_test_score': array([0.57874016, 0.61417323, 0.53937008]), 'split2_test_score': array([0.58267717, 0.59055118, 0.61811024]), 'split3_test_score': array([0.63779528, 0.63779528, 0.64173228]), 'split4_test_score': array([0.73622047, 0.7480315 , 0.70866142]), 'mean_test_score': array([0.64330709, 0.65433071, 0.63858268]), 'std_test_score': array([0.0598943 , 0.05558854, 0.05889216]), 'rank_test_score': array([2, 1, 3])}
Best params : {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': 10, 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}
Best mean cross-validation score : 0.6543307086614173

Reading testing data
Sequences loaded : [140]

Testing model
Testing data score : 0.5928571428571429

-------------------------------


Process finished with exit code 0
